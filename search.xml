<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[博客搭起来了(Hexo + GitHub)]]></title>
    <url>%2F2018%2F05%2F14%2F%E5%8D%9A%E5%AE%A2%E6%90%AD%E8%B5%B7%E6%9D%A5%E4%BA%86%2F</url>
    <content type="text"><![CDATA[一直想搭个人博客来记点什么，去年的时候在本地用Hexo和NexT主题弄了一个，但是后面一直没有更新，这次重新拾起，写个文章记录下搭建过程，也督促自己以后多写点东西。 安装及主题配置这部分比较简单，官网上都有说明，按照下面链接中的步骤来做就行了。 HexoNexT 花时间比较多的地方在主题配置，主要是把标签、分类等页面加上，增加社交链接和本地搜索功能等。另外还有评论、统计等功能暂时还没添加，等后面再加。 在主题的配置时有一个小技巧，就是把主题目录下的配置文件 _config.xml (注意不是根目录下的)拷贝为 /source/_data/next.yml，后面只需要修改 /source/_data/next.yml 即可，这样可以把主题的源码和配置隔离开，避免主题升级时产生冲突，具体可参考官方说明。 代码管理概述为了便于管理，我把Hexo的代码和发布的文件放在 substarry.github.io 的不同分支上管理： master：用来存放发布的文件，这部分在Hexo配置文件里面配置即可，不需要自己来操作hexo：用来存放hexo的代码 查看根目录下的 .gitignore 文件： 1234567.DS_StoreThumbs.dbdb.json*.lognode_modules/ public/.deploy*/ 其中 node_modules/ 主要依赖的一些模块，通过 npm install 即可下载不需要保存，public/ 为发布的文件，在执行 hexo d 发布时会自动上传到 master 分支。 对于 NexT 主题，我是直接 clone 的官方 github 仓库的，如果将来自己要修改，可以再建一个分支 theme-next 用来保存主题。 具体操作Hexo 发布配置(站点配置文件_config.xml)： 1234deploy: type: git repository: git@github.com:substarry/substarry.github.io.git branch: master 上传 Hexo 代码，先初始化 git 仓库并创建 hexo 分支： 12git initgit checkout -b hexo 设置 remote 地址： 1git remote add origin https://github.com/substarry/substarry.github.io.git push 代码： 1git push origin hexo:hexo 换电脑后的恢复方法 安装 Node.js 和 Hexo 下载 Hexo 代码 git clone https://github.com/substarry/substarry.github.io.git -b hexo 在 Hexo 代码根目录执行 npm install 下载主题代码，自己仓库的 theme_next 分支 or 官方仓库]]></content>
      <categories>
        <category>Hexo</category>
      </categories>
      <tags>
        <tag>技术</tag>
      </tags>
  </entry>
</search>
